version: '3.7'

services:
    traefik:
        profiles:
            - servers
        image: traefik:v2.8
        command:
            - --log.level=info
            - --api.insecure=true
            - --api.dashboard=true
            - --serversTransport.insecureSkipVerify=true
            - --entrypoints.web.address=:80
            - --entrypoints.websecure.address=:443
            - --providers.docker=true
            - --experimental.hub=true
            - --providers.docker.exposedbydefault=false
            - --providers.file.watch=true
            - --providers.file.directory=/traefik
        ports:
            - 80:80
            - 443:443
            - 8888:8080
        labels:
            - traefik.enable=true
            - traefik.http.routers.traefik.rule=PathPrefix(`/`) || PathPrefix(`/dashboard`)
            - traefik.http.routers.traefik.entrypoints=traefik
            - traefik.http.routers.traefik.service=dashboard@internal
            - traefik.http.routers.traefik.service=api@internal
            - traefik.http.routers.traefik.tls=true
            - traefik.http.middlewares.cors.headers.accessControlAllowCredentials=true
            - traefik.http.middlewares.cors.headers.accessControlAllowMethods=*
            - traefik.http.middlewares.cors.headers.accessControlAllowHeaders=*
            - traefik.http.middlewares.cors.headers.accessControlAllowOriginList=*
            - traefik.http.middlewares.cors.headers.addVaryHeader=true
            - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
            - traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)
            - traefik.http.routers.http-catchall.entrypoints=web
            - traefik.http.routers.http-catchall.middlewares=redirect-to-https
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ./configs/traefik:/traefik:ro
            - ./configs/certs:/certs:ro

    postgres:
        profiles:
            - servers
        image: postgres:11
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
        healthcheck:
            test: pg_isready -U postgres -d postgres
            interval: 5s
            timeout: 3s
            retries: 3
        volumes: 
            - postgres:/var/lib/postgresql/data:rw
            - ./configs/postgres:/docker-entrypoint-initdb.d

    mongodb:
        profiles:
            - servers
        image: mongo
        healthcheck:
            test: mongosh --eval 'db.stats().ok' --quiet
            interval: 5s
            retries: 3
            start_period: 5s
            timeout: 10s
        volumes:
            - mongo:/data/db:rw

    opa:
        profiles:
            - servers
        image: openpolicyagent/opa:0.50.2-static
        command:
            - run
            - --server
            - --log-format=json-pretty
            - --set=decision_logs.console=true
            - --set=services.nginx.url=http://opa-bundles-service
            - --set=bundles.nginx.service=nginx
            - --set=bundles.nginx.resource=/bundles/bundle.tar.gz
            - --set=bundles.nginx.polling.min_delay_seconds=10
            - --set=bundles.nginx.polling.max_delay_seconds=30
            - --tls-cert-file=/certs/_wildcard.wkspower.local+5.pem
            - --tls-private-key-file=/certs/_wildcard.wkspower.local+5-key.pem
        volumes:
            - ./configs/certs:/certs:ro

    opa-bundles-service:
        profiles:
            - servers    
        build:
            context: .
            dockerfile: ./policy-decision-api/Dockerfile

    camunda:
        profiles:
            - servers
        image: camunda/camunda-bpm-platform:run-7.19.0-SNAPSHOT
        command: ./camunda.sh --rest --webapps --production
        labels:
            - traefik.enable=true
            - traefik.http.routers.camunda.rule=Host(`camunda.wkspower.local`)
            - traefik.http.routers.camunda.entrypoints=web,websecure
            - traefik.http.routers.camunda.service=camunda
            - traefik.http.routers.camunda.tls=true
            - traefik.http.services.camunda.loadbalancer.sticky.cookie.name=SESSIONID
            - traefik.http.services.camunda.loadbalancer.sticky.cookie.secure=true
            - traefik.http.services.camunda.loadbalancer.sticky.cookie.httpOnly=true
            - traefik.http.services.camunda.loadbalancer.server.scheme=https
            - traefik.http.services.camunda.loadbalancer.server.port=8443
        environment:
            DB_DRIVER: org.postgresql.Driver
            DB_URL: jdbc:postgresql://postgres:5432/camunda
            DB_USERNAME: camunda
            DB_PASSWORD: camunda00
            DB_VALIDATE_ON_BORROW: "false"
            KEY_ALIAS: wks
            KEY_STORE_PASSWORD: wks
            KEY_PASSWORD: wks
        depends_on:
            postgres:
                condition: service_healthy
        volumes:
            - ./configs/certs/keystore.p12:/camunda/configuration/keystore/keystore.p12:ro
            - ./configs/camunda/production.yml:/camunda/configuration/production.yml:ro

    keycloak:
        profiles:
            - servers
        image: quay.io/keycloak/keycloak:20.0.3
        command: start -b
        labels:
            - traefik.enable=true
            - traefik.http.routers.keycloak.rule=Host(`login.wkspower.local`)
            - traefik.http.routers.keycloak.entrypoints=websecure
            - traefik.http.routers.keycloak.service=keycloak
            - traefik.http.routers.keycloak.tls=true
            - traefik.http.services.keycloak.loadbalancer.server.scheme=http
            - traefik.http.services.keycloak.loadbalancer.server.port=8080
            - traefik.http.routers.keycloakadmin.rule=Host(`iam.wkspower.local`)
            - traefik.http.routers.keycloakadmin.entrypoints=websecure
            - traefik.http.routers.keycloakadmin.service=keycloakadmin
            - traefik.http.routers.keycloakadmin.tls=true
            - traefik.http.services.keycloakadmin.loadbalancer.sticky.cookie.name=SESSIONID
            - traefik.http.services.keycloakadmin.loadbalancer.sticky.cookie.secure=true
            - traefik.http.services.keycloakadmin.loadbalancer.sticky.cookie.httpOnly=true
            - traefik.http.services.keycloakadmin.loadbalancer.server.scheme=http
            - traefik.http.services.keycloakadmin.loadbalancer.server.port=8080
        environment:
            KC_LOG_LEVEL: "INFO"
            KC_PROXY: edge
            KC_HOSTNAME: login.wkspower.local
            KC_HOSTNAME_ADMIN: iam.wkspower.local
            KC_HEALTH_ENABLED: "true"
            KC_METRICS_ENABLED: "true"      
            KC_HTTPS_CERTIFICATE_FILE: /certs/_wildcard.wkspower.local+5.pem
            KC_HTTPS_CERTIFICATE_KEY_FILE: /certs/_wildcard.wkspower.local+5-key.pem
            KC_DB: postgres
            KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
            KC_DB_USERNAME: keycloak
            KC_DB_PASSWORD: keycloak00
            KEYCLOAK_ADMIN: admin
            KEYCLOAK_ADMIN_PASSWORD: admin
        healthcheck:
            test: curl -k --fail https://localhost:8443/health/ready || exit 1
            interval: 10s
            retries: 3
            start_period: 5s
            timeout: 10s
        volumes:
            - ./configs/certs:/certs
        depends_on:
            postgres:
                condition: service_healthy

    case-engine-rest-api:
        profiles:
            - api
        build:
            context: .
            dockerfile: ./case-engine-rest-api/Dockerfile
        labels:
            - traefik.enable=true
            - traefik.http.routers.case-engine-rest-api.rule=Host(`api.wkspower.local`)
            - traefik.http.routers.case-engine-rest-api.entrypoints=web,websecure
            - traefik.http.routers.case-engine-rest-api.service=case-engine-rest-api
            - traefik.http.routers.case-engine-rest-api.tls=true
            - traefik.http.services.case-engine-rest-api.loadbalancer.server.scheme=http
            - traefik.http.services.case-engine-rest-api.loadbalancer.server.port=8081
        environment:
            - MONGO_DATABASE=shared
            - MONGO_CONN=mongodb://mongodb
            - KEYCLOAK_URL=http://keycloak:8080
            - OPA_URL=https://opa:8181/v1/data/wks/authz/allow
            - TRUST_STORE_PASSWORD=wks
        depends_on:
            mongodb:
                condition: service_healthy
            keycloak:
                condition: service_healthy
        volumes:
            - ./configs/certs/keystore.p12:/keystore.p12:ro

    bpm-engine-c7-external-service:
        profiles:
            - api
        build:
            context: .
            dockerfile: ./bpm-engine-c7-external-service/Dockerfile
        environment:
            - CAMUNDA_URL=https://camunda:8443/engine-rest
            - CAMUNDA_USERNAME=demo
            - CAMUNDA_PASSWORD=demo
            - MONGO_DATABASE=shared
            - MONGO_CONN=mongodb://mongodb
            - TRUST_STORE_PASSWORD=wks
        depends_on:
            mongodb:
                condition: service_healthy
        volumes:
            - ./configs/certs/keystore.p12:/keystore.p12:ro

    email-to-case:
        profiles:
            - api
        build:
            context: .
            dockerfile: ./email-to-case/Dockerfile
        labels:
            - traefik.enable=true
            - traefik.http.routers.email-to-case.rule=Host(`api.wkspower.local`) && PathPrefix(`/inbound`)
            - traefik.http.routers.email-to-case.entrypoints=web,websecure
            - traefik.http.routers.email-to-case.service=email-to-case
            - traefik.http.routers.email-to-case.tls=true
            - traefik.http.services.email-to-case.loadbalancer.server.scheme=http
            - traefik.http.services.email-to-case.loadbalancer.server.port=8083
        environment:
            - MONGO_DATABASE=shared
            - MONGO_CONN=mongodb://mongodb
            - EMAIL_CASE_PATTERN_NEW=new-case
            - EMAIL_CASE_PATTERN_UPDATE=update-case
            - KEYCLOAK_URL=https://keycloak:8433
            - OPA_URL=https://opa:8181/v1/data/wks/authz/allow
            - TRUST_STORE_PASSWORD=wks
        depends_on:
            mongodb:
                condition: service_healthy
            keycloak:
                condition: service_healthy
        volumes:
            - ./configs/certs/keystore.p12:/keystore.p12:ro

    case-portal:
        profiles:
            - frontend
        build:
            context: .
            dockerfile: ./case-portal-react/Dockerfile
            args:
                REACT_APP_KEYCLOAK_URL: https://login.wkspower.local
                REACT_APP_API_URL: https://api.wkspower.local
                REACT_APP_EMAIL_URL: https://api.wkspower.local/inbound
        labels:
            - traefik.enable=true
            - traefik.http.routers.case-portal.rule=Host(`app.wkspower.local`)
            - traefik.http.routers.case-portal.entrypoints=web,websecure
            - traefik.http.routers.case-portal.service=case-portal
            - traefik.http.routers.case-portal.tls=true
            - traefik.http.services.case-portal.loadbalancer.server.scheme=http
            - traefik.http.services.case-portal.loadbalancer.server.port=80

    case-engine-loader:
        profiles:
            - init
        build:
            context: .
            dockerfile: ./case-engine-loader/Dockerfile
        environment:
            - IMPORT_DIR_PATH=/data
            - MONGO_SHARED_DATABASE=shared
            - MONGO_DATABASE=app
            - MONGO_CONN=mongodb://mongodb
            - OPA_URL=https://opa:8181/v1/data/wks/authz/allow
            - KEYCLOAK_URL=http://keycloak:8080
            - KEYCLOAK_IMPORT_DNS=app.wkspower.local
            - KEYCLOAK_IMPORT_PORT=:443
            - KEYCLOAK_IMPORT_PROTOCOL=https
            - CAMUNDA_URL=https://camunda:8443/engine-rest
            - CAMUNDA_USERNAME=demo
            - CAMUNDA_PASSWORD=demo
            - TRUST_STORE_PASSWORD=wks
        volumes:
            - ./configs/certs/keystore.p12:/keystore.p12:ro

volumes:
    postgres:
        driver: local
    mongo:
        driver: local